#!/bin/bash

set -e

COMMAND_FQP=${0}
COMMAND=$(basename ${COMMAND_FQP})

if [ ! -z ${NUIS_CLI_DEBUG} ]; then
echo "[CLI DEBUG](BrCr: ${NUIS_BREADCRUMBS}): ${COMMAND} Arguments(${#}): ${@}"
fi

function nuis_hepdata_help {
  echo "Run like: ${NUIS_BREADCRUMBS} <command>"
  echo -e "\tCommands:"
  echo -e "\t  help                                               : Display this message"
  echo -e "\t  get-ref-component <comp> [type:]<recid>[/resource] : Get <comp> component from reference."
  echo -e "\t                                                         Components:"
  echo -e "\t                                                           reftype"
  echo -e "\t                                                           recordid"
  echo -e "\t                                                           recordvers"
  echo -e "\t                                                           resourcename"
  echo -e "\t                                                           qualifier"
  echo -e "\t  get-local-path [type:]<recid>[/resource]           : Get a local path to a resource."
  echo -e "\t                                                       <type> can be hepdata, hepdata-sandbox, or inspirehep."
  echo -e "\t                                                       <recid> is the record identifier."
  echo -e "\t                                                       <resource> is the specific resource,"
  echo -e "\t                                                       if omitted, get local path to submission"
  echo -e "\t  get-cross-section-measurements [type:]<recid>      : Get the data tables provided by a hepdata record"
  echo -e "\t  get-independent-vars [type:]<recid>/table          : Get independent variables for a given table"
  echo -e "\t  get-dependent-vars [type:]<recid>/table            : Get dependent variables for a given table"
  echo -e "\t  get-qualifiers [type:]<recid>/table[:qual]         : Get qualifiers on the first dependent variable "
  echo -e "\t                                                       If <qual> is passed and is a valid qualifier key"
  echo -e "\t                                                       then only print the value of that qualifier."
  echo -e "\t  get-local-additional-resources [type:]<recid>      : Get the filenames of any additional resources"
  echo -e "\t                                                       for a given table"
  echo -e "\n  Example: ${NUIS_BREADCRUMBS} get-local-path hepdata-sandbox:1713531371"
  echo -e "\n--"
  echo -e "\nFor most of these commands, the entire reference block ([type:]<recid>/table[:qual])"
  echo -e "can be replaced by a local pathname."
  echo -e "\n  Example: ${NUIS_BREADCRUMBS} get-data-tables relative/path/to/submission.yaml"
  echo -e "\n--"
}

if [ "${#}" -lt 1 ]; then
  echo -e "[ERROR]: Insufficient arguments passed to ${NUIS_BREADCRUMBS}"
  nuis_hepdata_help
  exit 1
fi

KEYARG="${1}"
shift

case $KEYARG in
  get-ref-component)
    python3 -c "import NUISANCEHEPData as nhd; print(nhd.ResolveReferenceIdentifiers('${2}')['${1}']);"
    ;;

  get-local-path)
    python3 -c "import os; import NUISANCEHEPData as nhd; print(nhd.GetLocalPathToResource(os.environ['NUISANCEDB'],'${1}')[1]);"
    ;;

  get-cross-section-measurements)
    python3 -c "import NUISANCEHEPData as nhd; hr = nhd.NUISHEPDataRecord('${1}'); [ print(x.name) for x in hr.cross_section_measurements ]"
    ;;

  get-local-additional-resources)
    python3 -c "import os; import NUISANCEHEPData as nhd; hr = nhd.NUISHEPDataRecord('${1}'); [ print(x) if os.path.exists(f'{hr.record_path}/{x}') else None for x in hr.additional_resources ]"
    ;;

  get-independent-vars)
    table_name=$(python3 -c "import NUISANCEHEPData as nhd; print(nhd.ResolveReferenceIdentifiers('${1}')['resourcename']);")
    python3 -c "import NUISANCEHEPData as nhd; hr = nhd.NUISHEPDataRecord('${1}'); xs = { x.name : x for x in hr.cross_section_measurements }; hdt = xs['${table_name}']; [ print(x['name']) for x in hdt.independent_variables ]"
    ;;

  get-dependent-vars)
    table_name=$(python3 -c "import NUISANCEHEPData as nhd; print(nhd.ResolveReferenceIdentifiers('${1}')['resourcename']);")
    python3 -c "import NUISANCEHEPData as nhd; hr = nhd.NUISHEPDataRecord('${1}'); xs = { x.name : x for x in hr.cross_section_measurements }; hdt = xs['${table_name}']; [ print(x.name) for x in hdt.dependent_variables ]"
    ;;

  get-qualifiers)
    table_name=$(python3 -c "import NUISANCEHEPData as nhd; print(nhd.ResolveReferenceIdentifiers('${1}')['resourcename']);")
    qual=$(python3 -c "import NUISANCEHEPData as nhd; print(nhd.ResolveReferenceIdentifiers('${1}')['qualifier']);")
    python3 -c "import NUISANCEHEPData as nhd; hr = nhd.NUISHEPDataRecord('${1}'); xs = { x.name : x for x in hr.cross_section_measurements }; hdt = xs['${table_name}']; [ [ print(f'{k}: {v}') for k,v in x.quals.items() ] if x.name == '${qual}' or len('${qual}') == 0 else None for x in hdt.dependent_variables ]"
    ;;

  help)
    nuis_hepdata_help
    exit 0
    ;;

  *)
    echo "[ERROR] Unknown command ${KEYARG}"
    nuis_hepdata_help
    exit 1
    ;;
esac
